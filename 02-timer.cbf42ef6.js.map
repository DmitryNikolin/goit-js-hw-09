{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,S,aAKMC,EAAiBC,SAASC,cAAc,oBACxCC,EAAYF,SAASC,cAAc,UACnCE,EAAWH,SAASC,cAAc,sBAElCG,EAASJ,SAASK,iBAAiB,UACnCC,EAAYN,SAASK,iBAAiB,UACtCE,EAAYP,SAASK,iBAAiB,UACtCG,EAAWR,SAASC,cAAc,eAClCQ,EAAYT,SAASC,cAAc,gBACnCS,EAAcV,SAASC,cAAc,kBACrCU,EAAcX,SAASC,cAAc,kBAEvCW,EAAe,KACfC,EAAe,IAAIC,KACvBX,EAASY,UAAW,EACpBb,EAAUc,MAAMC,QAAU,O,IAErBC,GAAU,EAAVC,GAAU,EAAVC,OAAUC,E,IAAf,QAAKC,EAAAC,EAAcjB,EAASkB,OAAAC,cAAvBP,GAAAI,EAAAC,EAAUG,QAAAC,MAAVT,GAAU,EAAe,CAAzB,IAAMU,EAANN,EAAUO,MACbD,EAAKZ,MAAMc,SAAW,UACtBF,EAAKZ,MAAMe,WAAa,K,WAFrBZ,GAAU,EAAVC,EAAUY,C,aAAVd,GAAU,MAAVK,EAAUU,QAAVV,EAAUU,Q,YAAVd,E,MAAAC,C,MAKAc,GAAU,EAAVC,GAAU,EAAVC,OAAUf,E,IAAf,QAAKgB,EAAAC,EAAc/B,EAASiB,OAAAC,cAAvBS,GAAAG,EAAAC,EAAUZ,QAAAC,MAAVO,GAAU,EAAe,CAAzB,IAAMK,EAANF,EAAUR,MACbU,EAAKvB,MAAMc,SAAW,UACtBS,EAAKvB,MAAMwB,cAAgB,W,WAFxBL,GAAU,EAAVC,EAAUK,C,aAAVP,GAAU,MAAVI,EAAUL,QAAVK,EAAUL,Q,YAAVE,E,MAAAC,C,MAKAM,GAAW,EAAXC,GAAW,EAAXC,OAAWvB,E,IAAhB,QAAKwB,EAAAC,EAAe1C,EAAMoB,OAAAC,cAArBiB,GAAAG,EAAAC,EAAWpB,QAAAC,MAAXe,GAAW,EAAY,CAAvB,IAAMK,EAANF,EAAWhB,MACdkB,EAAM/B,MAAMC,QAAU,OACtB8B,EAAM/B,MAAMgC,cAAgB,SAC5BD,EAAM/B,MAAMiC,eAAiB,SAC7BF,EAAM/B,MAAMkC,WAAa,SACzBH,EAAM/B,MAAMmC,YAAc,M,WALvBR,GAAW,EAAXC,EAAWQ,C,aAAXV,GAAW,MAAXI,EAAWb,QAAXa,EAAWb,Q,YAAXU,E,MAAAC,C,EAQL,IAAMS,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAI1C,KACjB2C,gBAAiB,EACjBC,QAAA,SAAQC,GACN,GAAIA,EAAc,GAAK,IAAI7C,KAEU,OADnC8C,EAAAC,GAASC,OAAOC,QAAQ,8CACjBC,cAAcpD,GAEnB+C,EAAc,GAAK,IAAI7C,OACzBX,EAASY,UAAW,GAEtBkD,QAAQC,IAAIP,EAAc,IAC1B9C,EAAe8C,EAAc,E,GAWjC,SAASQ,IACP,IAwBiBC,EACXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAhCFC,EAAYhE,EAAe,IAAIC,KAC7BgE,GAuBWV,EAvBMS,EA2BjBL,EAAa,IADbD,EAAgB,IADhBD,EAAkB,IADlBD,EAAS,OAITI,EAAOM,EAAeC,KAAKC,MAAMb,EAAGI,IACpCE,EAAQK,EAAeC,KAAKC,MAAMb,EAAII,EAAKD,IAC3CI,EAAUI,EAAeC,KAAKC,MAAMb,EAAKI,EAAKD,EAAMD,IACpDM,EAAUG,EAAeC,KAAKC,MAAMb,EAAQI,EAAKD,EAAMD,EAAQD,IAE9D,CAAEI,OAAMC,QAAOC,UAASC,YA/B/B,GAAIC,GAAa,EAIf,OAHAjB,EAAAC,GAASC,OAAOoB,QAAQ,4BACxB/E,EAASY,UAAW,OACpBiD,cAAcpD,IAOlB,SAAyBuE,G,IAAEV,EAAFU,EAAEV,KAAMC,EAARS,EAAQT,MAAOC,EAAfQ,EAAeR,QAASC,EAAxBO,EAAwBP,QAC/CpE,EAAS4E,YAAc,GAAQC,OAALZ,GAC1BhE,EAAU2E,YAAc,GAASC,OAANX,GAC3BhE,EAAY0E,YAAc,GAAWC,OAARV,GAC7BhE,EAAYyE,YAAc,GAAWC,OAART,E,CAP7BU,CAAgBR,E,CAUlB,SAASC,EAAelD,GACtB,OAAO0D,OAAO1D,GAAO2D,SAAS,EAAG,I,EA9BnC,EAAA3F,EAAA4F,SAAU1F,EAAgBsD,GAE1BlD,EAASuF,iBAAiB,SAE1B,WACE9E,EAAe+E,YAAYxB,EAAa,I","sources":["src/js/02-timer.js"],"sourcesContent":["// Описан в документации\nimport flatpickr from 'flatpickr';\n// Дополнительный импорт стилей\nimport 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst timerShow = document.querySelector('.timer');\nconst btnStart = document.querySelector('button[data-start]');\n\nconst fields = document.querySelectorAll('.field');\nconst spanValue = document.querySelectorAll('.value');\nconst spanLabel = document.querySelectorAll('.label');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nlet timeInterval = null;\nlet selectedDate = new Date();\nbtnStart.disabled = true;\ntimerShow.style.display = 'flex';\n\nfor (const span of spanValue) {\n  span.style.fontSize = '2.25rem';\n  span.style.fontWeight = '500';\n}\n\nfor (const span of spanLabel) {\n  span.style.fontSize = '0.75rem';\n  span.style.textTransform = 'uppercase';\n}\n\nfor (const field of fields) {\n  field.style.display = 'flex';\n  field.style.flexDirection = 'column';\n  field.style.justifyContent = 'center';\n  field.style.alignItems = 'center';\n  field.style.marginRight = '10px';\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      Notiflix.Notify.failure('Пожалуйста выберите дату больше текущей...');\n      return clearInterval(timeInterval);\n    }\n    if (selectedDates[0] > new Date()) {\n      btnStart.disabled = false;\n    }\n    console.log(selectedDates[0]);\n    selectedDate = selectedDates[0];\n  },\n};\nflatpickr(dateTimePicker, options);\n\nbtnStart.addEventListener('click', startCount);\n\nfunction startCount() {\n  timeInterval = setInterval(timeCounter, 1000);\n}\n\nfunction timeCounter() {\n  let deltaTime = selectedDate - new Date();\n  const time = convertMs(deltaTime);\n\n  if (deltaTime <= 0) {\n    Notiflix.Notify.success('Обратный отсчет окончен!');\n    btnStart.disabled = true;\n    clearInterval(timeInterval);\n    return;\n  }\n\n  updateTimerFace(time);\n}\n\nfunction updateTimerFace({ days, hours, minutes, seconds }) {\n  dataDays.textContent = `${days}`;\n  dataHours.textContent = `${hours}`;\n  dataMinutes.textContent = `${minutes}`;\n  dataSeconds.textContent = `${seconds}`;\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = addLeadingZero(Math.floor(ms/day));\n  const hours = addLeadingZero(Math.floor((ms%day)/hour));\n  const minutes = addLeadingZero(Math.floor(((ms%day)%hour)/minute));\n  const seconds = addLeadingZero(Math.floor((((ms % day)%hour)%minute)/second));\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["$dbdyf","parcelRequire","$84b9dae4df53835d$var$dateTimePicker","document","querySelector","$84b9dae4df53835d$var$timerShow","$84b9dae4df53835d$var$btnStart","$84b9dae4df53835d$var$fields","querySelectorAll","$84b9dae4df53835d$var$spanValue","$84b9dae4df53835d$var$spanLabel","$84b9dae4df53835d$var$dataDays","$84b9dae4df53835d$var$dataHours","$84b9dae4df53835d$var$dataMinutes","$84b9dae4df53835d$var$dataSeconds","$84b9dae4df53835d$var$timeInterval","$84b9dae4df53835d$var$selectedDate","Date","disabled","style","display","$84b9dae4df53835d$var$_iteratorNormalCompletion","$84b9dae4df53835d$var$_didIteratorError","$84b9dae4df53835d$var$_iteratorError","undefined","$84b9dae4df53835d$var$_step","$84b9dae4df53835d$var$_iterator","Symbol","iterator","next","done","$84b9dae4df53835d$var$span","value","fontSize","fontWeight","err","return","$84b9dae4df53835d$var$_iteratorNormalCompletion1","$84b9dae4df53835d$var$_didIteratorError1","$84b9dae4df53835d$var$_iteratorError1","$84b9dae4df53835d$var$_step1","$84b9dae4df53835d$var$_iterator1","$84b9dae4df53835d$var$span1","textTransform","err1","$84b9dae4df53835d$var$_iteratorNormalCompletion2","$84b9dae4df53835d$var$_didIteratorError2","$84b9dae4df53835d$var$_iteratorError2","$84b9dae4df53835d$var$_step2","$84b9dae4df53835d$var$_iterator2","$84b9dae4df53835d$var$field","flexDirection","justifyContent","alignItems","marginRight","err2","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","$parcel$interopDefault","$iU1Pc","Notify","failure","clearInterval","console","log","$84b9dae4df53835d$var$timeCounter","ms","second","minute","hour","day","days","hours","minutes","seconds","deltaTime","time","$84b9dae4df53835d$var$addLeadingZero","Math","floor","success","param","textContent","concat","$84b9dae4df53835d$var$updateTimerFace","String","padStart","default","addEventListener","setInterval"],"version":3,"file":"02-timer.cbf42ef6.js.map"}