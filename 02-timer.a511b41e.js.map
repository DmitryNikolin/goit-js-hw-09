{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,S,aAKA,MAAMC,EAAiBC,SAASC,cAAc,oBACxCC,EAAYF,SAASC,cAAc,UACnCE,EAAWH,SAASC,cAAc,sBAElCG,EAASJ,SAASK,iBAAiB,UACnCC,EAAYN,SAASK,iBAAiB,UACtCE,EAAYP,SAASK,iBAAiB,UACtCG,EAAWR,SAASC,cAAc,eAClCQ,EAAYT,SAASC,cAAc,gBACnCS,EAAcV,SAASC,cAAc,kBACrCU,EAAcX,SAASC,cAAc,kBAE3C,IAAIW,EAAe,KACfC,EAAe,IAAIC,KACvBX,EAASY,UAAW,EACpBb,EAAUc,MAAMC,QAAU,OAE1B,IAAK,MAAMC,KAAQZ,EACjBY,EAAKF,MAAMG,SAAW,UACtBD,EAAKF,MAAMI,WAAa,MAG1B,IAAK,MAAMC,KAAQd,EACjBc,EAAKL,MAAMG,SAAW,UACtBE,EAAKL,MAAMM,cAAgB,YAG7B,IAAK,MAAMC,KAASnB,EAClBmB,EAAMP,MAAMC,QAAU,OACtBM,EAAMP,MAAMQ,cAAgB,SAC5BD,EAAMP,MAAMS,eAAiB,SAC7BF,EAAMP,MAAMU,WAAa,SACzBH,EAAMP,MAAMW,YAAc,OAG5B,MAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIjB,KACjBkB,gBAAiB,EACjBC,QAAQC,GACN,GAAIA,EAAc,GAAK,IAAIpB,KAEU,OADnCqB,EAAAC,GAASC,OAAOC,QAAQ,8CACjBC,cAAc3B,GAEnBsB,EAAc,GAAK,IAAIpB,OACzBX,EAASY,UAAW,GAEtByB,QAAQC,IAAIP,EAAc,IAC1BrB,EAAeqB,EAAc,E,GAWjC,SAASQ,IACP,IAAIC,EAAY9B,EAAe,IAAIC,KACnC,MAAM8B,EAuBR,SAAmBC,GACjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EACNE,EAAOC,EAAeC,KAAKC,MAAMR,EAAGI,IACpCK,EAAQH,EAAeC,KAAKC,MAAMR,EAAII,EAAKD,IAC3CO,EAAUJ,EAAeC,KAAKC,MAAMR,EAAKI,EAAKD,EAAMD,IACpDS,EAAUL,EAAeC,KAAKC,MAAMR,EAAQI,EAAKD,EAAMD,EAAQD,IAErE,MAAO,C,KAAEI,E,MAAMI,E,QAAOC,E,QAASC,E,CAjClBC,CAAUd,GAEvB,GAAIA,GAAa,EAIf,OAHAR,EAAAC,GAASC,OAAOqB,QAAQ,4BACxBvD,EAASY,UAAW,OACpBwB,cAAc3B,IAOlB,UAAyBsC,KAAEA,EAAII,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,IAC/ChD,EAASmD,YAAc,GAAGT,IAC1BzC,EAAUkD,YAAc,GAAGL,IAC3B5C,EAAYiD,YAAc,GAAGJ,IAC7B5C,EAAYgD,YAAc,GAAGH,G,CAP7BI,CAAgBhB,E,CAUlB,SAASO,EAAeU,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,EA9BnC,EAAAlE,EAAAmE,SAAUjE,EAAgB6B,GAE1BzB,EAAS8D,iBAAiB,SAE1B,WACErD,EAAesD,YAAYxB,EAAa,I","sources":["src/js/02-timer.js"],"sourcesContent":["// Описан в документации\nimport flatpickr from 'flatpickr';\n// Дополнительный импорт стилей\nimport 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst timerShow = document.querySelector('.timer');\nconst btnStart = document.querySelector('button[data-start]');\n\nconst fields = document.querySelectorAll('.field');\nconst spanValue = document.querySelectorAll('.value');\nconst spanLabel = document.querySelectorAll('.label');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nlet timeInterval = null;\nlet selectedDate = new Date();\nbtnStart.disabled = true;\ntimerShow.style.display = 'flex';\n\nfor (const span of spanValue) {\n  span.style.fontSize = '2.25rem';\n  span.style.fontWeight = '500';\n}\n\nfor (const span of spanLabel) {\n  span.style.fontSize = '0.75rem';\n  span.style.textTransform = 'uppercase';\n}\n\nfor (const field of fields) {\n  field.style.display = 'flex';\n  field.style.flexDirection = 'column';\n  field.style.justifyContent = 'center';\n  field.style.alignItems = 'center';\n  field.style.marginRight = '10px';\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      Notiflix.Notify.failure('Пожалуйста выберите дату больше текущей...');\n      return clearInterval(timeInterval);\n    }\n    if (selectedDates[0] > new Date()) {\n      btnStart.disabled = false;\n    }\n    console.log(selectedDates[0]);\n    selectedDate = selectedDates[0];\n  },\n};\nflatpickr(dateTimePicker, options);\n\nbtnStart.addEventListener('click', startCount);\n\nfunction startCount() {\n  timeInterval = setInterval(timeCounter, 1000);\n}\n\nfunction timeCounter() {\n  let deltaTime = selectedDate - new Date();\n  const time = convertMs(deltaTime);\n\n  if (deltaTime <= 0) {\n    Notiflix.Notify.success('Обратный отсчет окончен!');\n    btnStart.disabled = true;\n    clearInterval(timeInterval);\n    return;\n  }\n\n  updateTimerFace(time);\n}\n\nfunction updateTimerFace({ days, hours, minutes, seconds }) {\n  dataDays.textContent = `${days}`;\n  dataHours.textContent = `${hours}`;\n  dataMinutes.textContent = `${minutes}`;\n  dataSeconds.textContent = `${seconds}`;\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = addLeadingZero(Math.floor(ms/day));\n  const hours = addLeadingZero(Math.floor((ms%day)/hour));\n  const minutes = addLeadingZero(Math.floor(((ms%day)%hour)/minute));\n  const seconds = addLeadingZero(Math.floor((((ms % day)%hour)%minute)/second));\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["$fbklV","parcelRequire","$40d383fb392a7037$var$dateTimePicker","document","querySelector","$40d383fb392a7037$var$timerShow","$40d383fb392a7037$var$btnStart","$40d383fb392a7037$var$fields","querySelectorAll","$40d383fb392a7037$var$spanValue","$40d383fb392a7037$var$spanLabel","$40d383fb392a7037$var$dataDays","$40d383fb392a7037$var$dataHours","$40d383fb392a7037$var$dataMinutes","$40d383fb392a7037$var$dataSeconds","$40d383fb392a7037$var$timeInterval","$40d383fb392a7037$var$selectedDate","Date","disabled","style","display","span","fontSize","fontWeight","span1","textTransform","field","flexDirection","justifyContent","alignItems","marginRight","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","$parcel$interopDefault","$eWCmQ","Notify","failure","clearInterval","console","log","$40d383fb392a7037$var$timeCounter","deltaTime","time","ms","second","minute","hour","day","days","$40d383fb392a7037$var$addLeadingZero","Math","floor","hours","minutes","seconds","$40d383fb392a7037$var$convertMs","success","textContent","$40d383fb392a7037$var$updateTimerFace","value","String","padStart","default","addEventListener","setInterval"],"version":3,"file":"02-timer.a511b41e.js.map"}