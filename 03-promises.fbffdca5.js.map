{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAI9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAiBH,SAASC,cAAc,oBACxCG,EAAcJ,SAASC,cAAc,sBACrCI,EAAWL,SAASM,qBAAqB,UACzCC,EAAa,QA6CnB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApDPX,EAAKmB,MAAMC,QAAU,OACrBpB,EAAKmB,MAAME,cAAgB,SAC3BrB,EAAKmB,MAAMG,WAAa,aACxBnB,EAAWgB,MAAMC,QAAU,OAC3BjB,EAAWgB,MAAME,cAAgB,SACjClB,EAAWgB,MAAMG,WAAa,aAC9BnB,EAAWgB,MAAMI,aAAe,OAChCpB,EAAWgB,MAAMK,MAAQhB,EACzBJ,EAAee,MAAMC,QAAU,OAC/BhB,EAAee,MAAME,cAAgB,SACrCjB,EAAee,MAAMG,WAAa,aAClClB,EAAee,MAAMI,aAAe,OACpCnB,EAAee,MAAMK,MAAQhB,EAC7BH,EAAYc,MAAMC,QAAU,OAC5Bf,EAAYc,MAAME,cAAgB,SAClChB,EAAYc,MAAMG,WAAa,aAC/BjB,EAAYc,MAAMI,aAAe,OACjClB,EAAYc,MAAMK,MAAQhB,EAC1BF,EAAS,GAAGa,MAAMM,SAAW,OAC7BnB,EAAS,GAAGa,MAAMO,WAAa,MAC/BpB,EAAS,GAAGa,MAAMK,MAAQhB,EAC1BR,EAAK2B,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAKN,IAJA,IAAIC,EAAaC,OAAO5B,EAAW6B,OAC/BC,EAAOF,OAAO3B,EAAe4B,OAC7BE,EAASH,OAAO1B,EAAY2B,OAEvBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChC1B,EAAc0B,EAAGL,GACdM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAAxC,GAASyC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjD+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAAxC,GAASyC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjDmB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n// const {\n//   elements: { inputDelay, inputDelayStep, inputAmount },\n// } = form;\nconst inputDelay = document.querySelector('input[name=delay]');\nconst inputDelayStep = document.querySelector('input[name=step]');\nconst inputAmount = document.querySelector('input[name=amount]');\nconst btnStart = document.getElementsByTagName('button');\nconst fieldWidth = '250px';\n\nform.style.display = 'flex';\nform.style.flexDirection = 'column';\nform.style.alignItems = 'flex-start';\ninputDelay.style.display = 'flex';\ninputDelay.style.flexDirection = 'column';\ninputDelay.style.alignItems = 'flex-start';\ninputDelay.style.marginBottom = '10px';\ninputDelay.style.width = fieldWidth;\ninputDelayStep.style.display = 'flex';\ninputDelayStep.style.flexDirection = 'column';\ninputDelayStep.style.alignItems = 'flex-start';\ninputDelayStep.style.marginBottom = '10px';\ninputDelayStep.style.width = fieldWidth;\ninputAmount.style.display = 'flex';\ninputAmount.style.flexDirection = 'column';\ninputAmount.style.alignItems = 'flex-start';\ninputAmount.style.marginBottom = '10px';\ninputAmount.style.width = fieldWidth;\nbtnStart[0].style.fontSize = '16px';\nbtnStart[0].style.fontWeight = '600';\nbtnStart[0].style.width = fieldWidth;\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let firstDelay = Number(inputDelay.value);\n  let step = Number(inputDelayStep.value);\n  let amount = Number(inputAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    firstDelay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputDelayStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$btnStart","getElementsByTagName","$ce04d3a99e08e73b$var$fieldWidth","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","style","display","flexDirection","alignItems","marginBottom","width","fontSize","fontWeight","addEventListener","event","preventDefault","firstDelay","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.fbffdca5.js.map"}